resin-settings-client
---------------------

[![npm version](https://badge.fury.io/js/resin-settings-client.svg)](http://badge.fury.io/js/resin-settings-client)
[![dependencies](https://david-dm.org/resin-io/resin-settings-client.png)](https://david-dm.org/resin-io/resin-settings-client.png)
[![Build Status](https://travis-ci.org/resin-io/resin-settings-client.svg?branch=master)](https://travis-ci.org/resin-io/resin-settings-client)
[![Build status](https://ci.appveyor.com/api/projects/status/a1tfwovw1kp421sa?svg=true)](https://ci.appveyor.com/project/jviotti/resin-settings-client)

Resin.io client application shared settings.

Role
----

The intention of this module is to provice low level access to user configurable Resin.io simple settings.

**THIS MODULE IS LOW LEVEL AND IS NOT MEANT TO BE USED BY END USERS DIRECTLY**.

Unless you know what you're doing, use the [Resin SDK](https://github.com/resin-io/resin-sdk) instead.

Installation
------------

Install `resin-settings-client` by running:

```sh
$ npm install --save resin-settings-client
```

Documentation
-------------

The following settings are documented:

- `remoteUrl`: The default Resin.io server url.
- `dashboardUrl`: The default Resin.io dashboard url.
- `dataDirectory`: The default per user data directory path.
- `cacheDirectory`: The default per user image cache directory path.
- `imageCacheTime`: The default time an operating system image is considered fresh.
- `tokenRefreshInterval`: The interval to refresh the token, to prevent it from becoming outdated.
- `projectsDirectory`: The default directory to store resin application projects.

Notice that Resin Settings Client reads `$HOME/.resin/config` and `$PWD/.resinconf` to customise it's per user and per application values.

{{#module name="settings"}}
{{>body~}}
{{>member-index~}}
{{>separator~}}
{{>members~}}
{{/module}}

Per User config
---------------

Resin Settings Client attempts to read a JSON config file at `$HOME/.resin/config`. If it exists, it will merge the changes described in the mentioned file with the default settings mentioned in the documentation.

For example, we can change the `remoteUrl`/`dashboardUrl` to match staging like this:

```sh
$ cat $HOME/.resin/config
{
  "remoteUrl": "https://api.resinstaging.io",
  "dashboardUrl": "https://dashboard.resinstaging.io"
}
```

Per Project config
------------------

Resin Settings Client attempts to read a JSON config file at `$PWD/.resinconf`. If it exists, it will take precedence over a *per user config* which itself takes precedence over the default settings.

For example, this will change the cache directory just for this project:

```sh
$ cat .resinconf
{
  "cacheDirectory": "/opt/resin/cache"
}
```

Modifying settings
------------------

This module is intended to only provide *read only* access to the settings. Resin Settings Clients reads settings from various locations, like a local `resinrc` file and a per user `config` file, therefore the module doesn't know where to write changes back.

If you want to persist data related to Resin.io, consider using [Resin Settings Storage](https://github.com/resin-io/resin-settings-storage) instead.

Support
-------

If you're having any problem, please [raise an issue](https://github.com/resin-io/resin-settings-client/issues/new) on GitHub and the Resin.io team will be happy to help.

Tests
-----

Run the test suite by doing:

```sh
$ gulp test
```

Contribute
----------

- Issue Tracker: [github.com/resin-io/resin-settings-client/issues](https://github.com/resin-io/resin-settings-client/issues)
- Source Code: [github.com/resin-io/resin-settings-client](https://github.com/resin-io/resin-settings-client)

Before submitting a PR, please make sure that you include tests, and that [coffeelint](http://www.coffeelint.org/) runs without any warning:

```sh
$ gulp lint
```

License
-------

The project is licensed under the MIT license.
